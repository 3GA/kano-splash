#!/usr/bin/env python

# kano-debug
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
#
# Enable/disable the debugging mode

import os
import sys
import json
import pydoc

sys.path.insert(0, "..")
from kano.logger import CONF, SYSTEM_LOGS_DIR, USER_LOGS_DIR


def show_logs(app=None):
    logfiles = []
    if app != None:
        for d in [SYSTEM_LOGS_DIR, USER_LOGS_DIR]:
            path = os.path.join(d, app + ".log")
            if os.path.exists(path):
                logfiles.append(path)

    else:
        for d in [SYSTEM_LOGS_DIR, USER_LOGS_DIR]:
            if os.path.exists(d):
                print d
                for log in os.listdir(d):
                    logfiles.append(os.path.join(d, log))

    output = ""
    for log in logfiles:
        output += log + "\n"
        with open(log, "r") as f:
            for line in f:
                data = json.loads(line)
                output += "{} {} {}\n".format(data["time"], data["pid"], \
                                              data["message"])
        output += "\n"

    if len(output) > 0:
        pydoc.pager(output)

def usage(rv):
    print "Usage: kano-debug [on|off|show-logs]"
    sys.exit(rv)

def main():
    # With no arguments, just print the current setting
    if len(sys.argv) <= 1:
        if os.file.exists(CONF):
            print "on"
        else:
            print "off"
        return 0

    if len(sys.argv) > 1:
        if sys.argv[1] in ["-h", "--help", "help"]:
            usage(0)

        if sys.argv[1] in ["on", "yes", "true", "1", "enabled"]:
            if os.getuid() != 0:
                msg = "ERROR: Must be root to change the debugging mode\n"
                sys.stderr.write(msg)
                sys.exit(1)

            with open(CONF, "a"):
                pass
            print "Debugging mode enabled."
        elif sys.argv[1] in ["off", "no", "false", "0", "disabled"]:
            if os.getuid() != 0:
                msg = "ERROR: Must be root to change the debugging mode\n"
                sys.stderr.write(msg)
                sys.exit(1)

            os.unlink(CONF)
            print "Debugging mode disabled."
        elif sys.argv[1] in ["show", "show-logs"]:
            if len(sys.argv) > 2:
                show_logs(sys.argv[2])
            else:
                show_logs()
        else:
            usage(1)

    return 0

if __name__ == "__main__":
    sys.exit(main())
