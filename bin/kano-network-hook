#!/usr/bin/env python
#
# kano-network-hook
#
# Copyright (C) 2015-2017 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# This script is called from the dhcpcd-hooks scripts,
# to send the RaspberryPI CPU Serial Number to Kano.
# It runs as the superuser.
#

import os
import sys
import time

from kano.logging import logger
from kano.utils import get_cpu_id, get_rpi_model, run_cmd


def send_cpu_id():
    sent = False

    # This is a loose dependency as we can't make kano-toolset
    # depend on profile.
    try:
        from kano_profile.tracking_events import generate_event
        generate_event('ping')
    except Exception as e:
        logger.error("Error sending the ping event ({})".format(e))

    # Get the unit CPU Serial number and send it, save a local copy
    cpuid = get_cpu_id()
    cpuid_filename = '/etc/cpuid-{}'.format(cpuid)
    cpuid_filename_boot = '/boot/cpuid.txt'.format(cpuid)
    utc_time = time.asctime(time.gmtime(time.time()))

    if os.path.isfile(cpuid_filename):
        # We have already sent the CPU ID
        sent = True
    else:
        try:
            # The code below is the legacy way of tracking cpuids
            # TODO: To be removed when the new way is known to be reliable

            # Save a trace of the CPUID so we dont send it over again
            # The UTC timestamp is embedded inside the cpuid file as well
            with open(cpuid_filename, 'a') as f:
                os.utime(cpuid_filename, None)
                f.write('RaspberryPI model: {}\n{}\n'.format(
                    get_rpi_model(), utc_time))

            # Send this file over the network
            cmdline='curl --retry 5 --retry-delay 3 -T "{}" ' \
                '--user "cpuname:mko821fgx" http://cpuids.kano.me//cpuserialnos/'.format(cpuid_filename)
            _, _,rc = run_cmd(cmdline)
            assert (rc == 0)
            sent = True
        except:
            if os.path.isfile(cpuid_filename): os.unlink(cpuid_filename)
            logger.error('Error sending Kit serial number')

    if os.path.isfile(cpuid_filename_boot):
        pass
    else:
        try:
            with open(cpuid_filename_boot, 'w') as f:
                f.write('RaspberryPI model: {}\n{}\n{}\n'.format(
                    get_rpi_model(),
                    utc_time,
                    cpuid))
        except:
            logger.error('Error writing boot cpuid')

    return sent

if __name__ == '__main__':
    rc = 1

    # A DHCP REBOOT event is an indication that the Internet should be reachable
    if len(sys.argv) > 1 and sys.argv[1] == 'REBOOT':

        if send_cpu_id() == True:
            logger.info('Kit serial number has been sent')
            rc=0

    exit (rc)
