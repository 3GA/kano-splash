#!/usr/bin/python
#
#  kano-test-dhcp
#
#  Copyright (C) 2017 Kano Computing Ltd.
#  License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
#  Simple test to make sure that various setup scripts have run on new DHCP hooks.
#  Searches the systemd journal for entries emitted by the network scripts.
#
#  To run these tests:
#   Enable journalctl adding "Storage=persistent" to /etc/systemd/journalctl.conf
#   Reboot the kit
#   Run this program to expect 0 failures
#

'''
kano-test-dhcp   Tests that network setup scripts have run correctly
Usage:
 kano-tesst-dhcp
 kano-tesst-dhcp [--dump]

Options:
 --dump                    Just dump journalctl logs

'''

import docopt
import os
import sys

failures=0

# Patterns to test on a successful network on boot
test_patterns_boot=[
   'REBOOT event',
   'launching network up scripts',
   'Started /usr/bin/kano-sentry-startup',
   'Started /usr/bin/kano-network-hook',
   'Started /usr/bin/kano-set-system-date',
   'Ultimate parental control',
   'Started /usr/bin/kano-dashboard-sysupdates',
   'dashboard-sysupdates: updates check starting',
   'Time has been changed',
   'info rdate SUCCESS'
   ]


def testlog(logs, entry, verbose=False):
   '''
   Tests that a text entry is registered in the logs
   '''
   global failures
   
   for line in logs:
      if entry in line:
         if verbose:
            print 'PASS: {}'.format(line),
         return True

   failures += 1
   print 'FAIL: {}'.format(entry)


if __name__ == '__main__':

   args = docopt.docopt(__doc__)

   # Permissions check
   if os.getuid() != 0:
      print 'You need root permissions'
      sys.exit(1)

   # Collect the journal from the current system bootup sequence alone
   output=os.popen('journalctl --boot=0 | grep "REBOOT" -A 60').readlines()
   if not len(output):
      # TODO: Teach "kano-dev" to do it for us
      print 'No logs found, did you enable journalctl?'
      print 'Set "Storage=persistent" in /etc/systemd/journalctl.conf'
      sys.exit(1)

   # Simply dump the logs and exit
   if args['--dump']:
      for line in output:
         print line,
      sys.exit(0)

   # Go through the test patterns and give a report
   for test in test_patterns_boot:
      testlog(output, test, verbose=True)

   print 'failures={}'.format(failures)
   sys.exit(failures > 0)
