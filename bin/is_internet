#!/bin/sh

# is_internet
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
#  Checks internet connectivity by fast pinging TEST_HOST
#  Returns 0 if connection is ok, non-zero otherwise.
#  The command is silent, no console output.
#

TEST_PING=8.8.8.8

# FIXME: below address points to dev.kano.me, ip addres to avoid DNS
TEST_CURL="http://80.243.184.98/public"
rc=255

# Kanux provides networking through either Ethernet or Wireless
# Before trying to reach the internet we make sure that one of this devices
# is hard-wired (ethernet) or associated (wireless).
lnketh0=$?
ifplugstatus wlan0 > /dev/null 2>&1
lnkwlan0=$?
if [ "$lnkwlan0" != "2" ] || [ "$lnkwlan0" != "2" ]; then
    exit 3
fi

# Link is up, let's see if we can reach out to the Internet
fping -c 10 -p 30ms -q $TEST_PING > /dev/null 2>&1
rc=$?
if [ $rc -ne 0 ]; then
    # check to see if socks is enabled
    # by looking if bash preloads the socks library
    ldd /bin/bash | grep 'socks' > /dev/null 2>&1
    rc=$?
    if [ "$rc" -eq "0" ]; then
        # if so, use curl instead of ping to see if we can reach the internet
	curl --retry 2 --retry-delay 1 $TEST_CURL > /dev/null 2>&1
	rc=$?
    fi
fi

exit $rc
